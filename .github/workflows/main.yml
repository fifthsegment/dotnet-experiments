name: CI
on:
  push:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      #- name: Install SSH key
      #  uses: webfactory/ssh-agent@v0.5.4
      #  with:
      #    ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Build Docker image
        run: |
          docker build -t abdullahi1/dotnetexperiments:latest .

      - name: Run Docker container
        run: docker run -d -p 5000:5000 abdullahi1/dotnetexperiments:latest

      - name: Wait for container to start
        run: sleep 5

      - name: Test Docker container
        run: curl -s http://localhost:5000/hello || exit 1      
      
      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
      # Push the Docker image
      - name: Push Docker image to registry
        run: docker push abdullahi1/dotnetexperiments:latest

      - name: Check client id
        run: echo ${{ secrets.TAILSCALE_OAUTH_CLIENT }}

      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          tags: tag:ci
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
      - name: Wait for a few seconds
        run: sleep 2

      - name: Ping ip
        run: ping -c 2 {{ secrets.KUBERNETES_VM_HOST }}

      - name: Write SSH key to file
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa && chmod 600 id_rsa

      - name: SSH into server and test if it works
        run: ssh -i id_rsa -o StrictHostKeyChecking=no abdullah@{{ secrets.KUBERNETES_VM_HOST }} 'ls'

      - name: Copy deployment.yaml
        run: scp -i id_rsa -o StrictHostKeyChecking=no deployment.yaml abdullah@{{ secrets.KUBERNETES_VM_HOST }}:/home/abdullah/deployment.yaml

      - name: Run deployment
        run: ssh -i id_rsa -o StrictHostKeyChecking=no abdullah@{{ secrets.KUBERNETES_VM_HOST }} 'sudo kubectl apply'

      - name: Get running pods
        run: ssh -i id_rsa -o StrictHostKeyChecking=no abdullah@${{ secrets.KUBERNETES_VM_HOST }} 'sudo kubectl get pods

        

